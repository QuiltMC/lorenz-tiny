plugins {
	id 'java-library'
	id 'maven-publish'
	id("org.cadixdev.licenser") version "0.5.0"
}

group 'org.quiltmc'
archivesBaseName = 'lorenz-tiny'
version '3.0.0'

def ENV = System.getenv()
version = version + (ENV.GITHUB_ACTIONS ? "" : "+local")

sourceCompatibility = 1.8
targetCompatibility = 1.8

java {
	withSourcesJar()
	withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

repositories {
	mavenCentral()
	maven {
		name = 'Quilt'
		url = 'https://maven.quiltmc.org/repository/release'
	}
}

dependencies {
	api 'org.cadixdev:lorenz:0.5.6'
	api 'org.quiltmc:tiny-mappings-parser:0.3.0'
}

license {
	header file("HEADER")
	include '**/*.java'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			withoutBuildIdentifier()
		}
	}

	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
//	doFirst {
//		def xml = new URL("https://maven.quiltmc.org/repository/release/org/quiltmc/lorenz-tiny/maven-metadata.xml").text
//		def metadata = new XmlSlurper().parseText(xml)
//		def versions = metadata.versioning.versions.version*.text();
//		if (versions.contains(version)) {
//			throw new RuntimeException("${version} has already been released!")
//		}
//	}
}

publish.mustRunAfter checkVersion